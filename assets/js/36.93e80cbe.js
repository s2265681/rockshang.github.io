(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{372:function(n,e,o){"use strict";o.r(e);var t=o(16),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("h3",{attrs:{id:"可持久化mysql-mongodb-redis"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#可持久化mysql-mongodb-redis"}},[n._v("#")]),n._v(" 可持久化Mysql-mongodb redis")]),n._v(" "),o("ol",[o("li",[o("p",[n._v("目标")]),n._v(" "),o("ul",[o("li",[n._v("掌握mongodb基本使用")]),n._v(" "),o("li",[n._v("理解文档型数据库设计理念")]),n._v(" "),o("li",[n._v("掌握原生模块node-mongodb-native应用")]),n._v(" "),o("li",[n._v("掌握ODM模块mongoose应用")]),n._v(" "),o("li",[n._v("了解快速开发工具KeyStoneJS")])])]),n._v(" "),o("li",[o("p",[n._v("mongodb安装、配置")])])]),n._v(" "),o("ul",[o("li",[n._v("下载安装\nhttps://www.runoob.com/mongodb/mongodb-osx-install.html")]),n._v(" "),o("li",[n._v("配置环境变量")]),n._v(" "),o("li",[n._v("创建dbpath文件夹")])]),n._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[n._v('  mongo\n > show dbs\n > use test\n > db.fruits.save({name:"apple",price:3})  // 插入\n > show dbs   \n\n > db.fruits.find({price:3})      // 查询价格为3的\n > db.getCollectionNames()        // 查看集合\n\n > db.fruits.find()               // 查找所有\n\n \n\n')])])]),o("ol",{attrs:{start:"3"}},[o("li",[o("p",[n._v("操作符文档\nhttps://docs.mongodb.com/manual/reference/operator/query")]),n._v(" "),o("ul",[o("li",[n._v("比较 $eq、$gt $in\nawait col.find({price:{$gt:10}}).toArray();")])])])]),n._v(" "),o("pre",[o("code",[n._v("-  逻辑$and $not $ or\n   // price > 10 或 < 5\n  await col.find({$or[{ price:{$gt:10}},{ price:{$lt:5}},]).toArray();\n")])]),n._v(" "),o("ol",{attrs:{start:"4"}},[o("li",[n._v("ODM - Mongoose")])]),n._v(" "),o("pre",[o("code",[n._v('- 概述： 优雅的NodeJs对象文档模型object document model\n- Mongoose 两个特点：\n   - 通过关系型数据库的思想来设计菲关系型数据库\n   - 基于mongodb驱动，简化操作\n- 安装 \n    -S --save （-dev） 不写也是--save 运行时必要的包    dependencies\n    -D -dev    开发时必要的包，项目交付运行不需要        devDependencies\n\n   ```\n    npm install mongoose -S\n\n   ```\n\n- 基本使用\n\n  ```\n  // mongoose.js\n  const mongoose = require("mongoose")\n\n  // 1.连接\n  mongoose.connect("mongodb://localhosr:27017/test",{useNewUrlParser:true});\n\n  const conn = mongoose.connection;\n  conn.on("error",()=>console.error(\'连接数据库失败\')\n\n  conn.once("open",async ()=>{\n    // 2.定义一个Schema - Table\n    const Schema = mongoose.Schema({\n      category:String,\n      name:String\n    })\n  }\n\n  ```\n\n  5. y -> \n  keystone  快速开发建站 基于mongoose 可以直接利用这个工具，或者仿自己的系统\n\n  https://keystonejs.com/getting-started/yo-generator\n\n  ```\n  npm install -g yo\n  npm install -g generator-keystone\n  初始化项目 yo keystone mySit\n\n  http://0.0.0.0:3000/keystone/signin\n\n  username: user@keystonejs.com\n  psw: admin\n\n  ```\n\n  6. 原型 -> ER -> 具体程序\n\n  ORM\n  原型 -> 模型 ->域模型 -> 程序\n\n  7. EventLoop是什么\n   - 一个循环交tick 每次循环的代码交task\n   - v8引擎单线程无法同时干两件事\n   - 要通过异步回调方式处理又称作异步IO\n   - 先同步在异步 异步放入队列等同步完成后执行，每次循环叫一个tick\n\n   8. 异步任务的区分\n\n   - microtasks(微任务)\n     唯一，整个事件循环当中，仅存一个，执行为同步，同一个事件循环中的microtask会按队列顺序，串行执行完毕；\n     - process.nextTik\n     - promise\n     - Object.observe\n     - MutationObserver\n\n   - tasks(宏任务)\n     - setTimeout\n     - setInterval\n     - setlmmediate\n     - I/O\n')])])])}),[],!1,null,null,null);e.default=s.exports}}]);